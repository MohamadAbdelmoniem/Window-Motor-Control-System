Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.ARM.exidx.text.delayMs) refers to main.o(.text.delayMs) for [Anonymous Symbol]
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.WindowUp_driverS) for WindowUp_driverS
    main.o(.text.main) refers to main.o(.bss.WindowDown_driverS) for WindowDown_driverS
    main.o(.text.main) refers to main.o(.bss.OnOffS) for OnOffS
    main.o(.text.main) refers to main.o(.bss.WindowUp_passengerS) for WindowUp_passengerS
    main.o(.text.main) refers to main.o(.bss.WindowDown_passengerS) for WindowDown_passengerS
    main.o(.text.main) refers to main.o(.bss.ObstacleS) for ObstacleS
    main.o(.text.main) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.main) refers to main.o(.bss.MotorMutex) for MotorMutex
    main.o(.text.main) refers to main.o(.text.initTask) for initTask
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.WindowUp_Driver) for WindowUp_Driver
    main.o(.text.main) refers to main.o(.text.WindowDown_Driver) for WindowDown_Driver
    main.o(.text.main) refers to main.o(.text.WindowUp_Passenger) for WindowUp_Passenger
    main.o(.text.main) refers to main.o(.text.WindowDown_Passenger) for WindowDown_Passenger
    main.o(.text.main) refers to main.o(.text.OnOff) for OnOff
    main.o(.text.main) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.initTask) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.initTask) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    main.o(.text.initTask) refers to gpio.o(i.GPIOPinTypeGPIOInput) for GPIOPinTypeGPIOInput
    main.o(.text.initTask) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.text.initTask) refers to gpio.o(i.GPIOIntEnable) for GPIOIntEnable
    main.o(.text.initTask) refers to gpio.o(i.GPIOIntTypeSet) for GPIOIntTypeSet
    main.o(.text.initTask) refers to main.o(.text.GPIOA_Handler) for GPIOA_Handler
    main.o(.text.initTask) refers to gpio.o(i.GPIOIntRegister) for GPIOIntRegister
    main.o(.text.initTask) refers to interrupt.o(i.IntPrioritySet) for IntPrioritySet
    main.o(.text.initTask) refers to main.o(.text.GPIOC_Handler) for GPIOC_Handler
    main.o(.text.initTask) refers to main.o(.text.GPIOF_Handler) for GPIOF_Handler
    main.o(.text.initTask) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    main.o(.text.initTask) refers to gpio.o(i.GPIOUnlockPin) for GPIOUnlockPin
    main.o(.text.initTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.ARM.exidx.text.initTask) refers to main.o(.text.initTask) for [Anonymous Symbol]
    main.o(.text.WindowUp_Driver) refers to main.o(.bss.WindowUp_driverS) for WindowUp_driverS
    main.o(.text.WindowUp_Driver) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.WindowUp_Driver) refers to main.o(.bss.MotorMutex) for MotorMutex
    main.o(.text.WindowUp_Driver) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.WindowUp_Driver) refers to main.o(.text.delayMs) for delayMs
    main.o(.text.WindowUp_Driver) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    main.o(.text.WindowUp_Driver) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.WindowUp_Driver) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.WindowUp_Driver) refers to main.o(.text.Obstacle) for Obstacle
    main.o(.text.WindowUp_Driver) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.WindowUp_Driver) refers to main.o(.text.WindowUp_Driver) for [Anonymous Symbol]
    main.o(.text.WindowDown_Driver) refers to main.o(.bss.WindowDown_driverS) for WindowDown_driverS
    main.o(.text.WindowDown_Driver) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.WindowDown_Driver) refers to main.o(.bss.MotorMutex) for MotorMutex
    main.o(.text.WindowDown_Driver) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.WindowDown_Driver) refers to main.o(.text.delayMs) for delayMs
    main.o(.text.WindowDown_Driver) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    main.o(.text.WindowDown_Driver) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.WindowDown_Driver) refers to main.o(.text.WindowDown_Driver) for [Anonymous Symbol]
    main.o(.text.WindowUp_Passenger) refers to main.o(.bss.WindowUp_passengerS) for WindowUp_passengerS
    main.o(.text.WindowUp_Passenger) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.WindowUp_Passenger) refers to main.o(.bss.MotorMutex) for MotorMutex
    main.o(.text.WindowUp_Passenger) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.WindowUp_Passenger) refers to main.o(.text.delayMs) for delayMs
    main.o(.text.WindowUp_Passenger) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    main.o(.text.WindowUp_Passenger) refers to main.o(.text.Obstacle) for Obstacle
    main.o(.text.WindowUp_Passenger) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.WindowUp_Passenger) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    main.o(.text.WindowUp_Passenger) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.WindowUp_Passenger) refers to main.o(.text.WindowUp_Passenger) for [Anonymous Symbol]
    main.o(.text.WindowDown_Passenger) refers to main.o(.bss.WindowDown_passengerS) for WindowDown_passengerS
    main.o(.text.WindowDown_Passenger) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.WindowDown_Passenger) refers to main.o(.bss.MotorMutex) for MotorMutex
    main.o(.text.WindowDown_Passenger) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.WindowDown_Passenger) refers to main.o(.text.delayMs) for delayMs
    main.o(.text.WindowDown_Passenger) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    main.o(.text.WindowDown_Passenger) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.WindowDown_Passenger) refers to main.o(.text.WindowDown_Passenger) for [Anonymous Symbol]
    main.o(.text.OnOff) refers to main.o(.bss.OnOffS) for OnOffS
    main.o(.text.OnOff) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.OnOff) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.OnOff) refers to gpio.o(i.GPIOIntDisable) for GPIOIntDisable
    main.o(.text.OnOff) refers to gpio.o(i.GPIOIntEnable) for GPIOIntEnable
    main.o(.ARM.exidx.text.OnOff) refers to main.o(.text.OnOff) for [Anonymous Symbol]
    main.o(.text.GPIOA_Handler) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.GPIOA_Handler) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.WindowUp_driverS) for WindowUp_driverS
    main.o(.text.GPIOA_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.WindowDown_driverS) for WindowDown_driverS
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.WindowUp_passengerS) for WindowUp_passengerS
    main.o(.text.GPIOA_Handler) refers to main.o(.bss.WindowDown_passengerS) for WindowDown_passengerS
    main.o(.ARM.exidx.text.GPIOA_Handler) refers to main.o(.text.GPIOA_Handler) for [Anonymous Symbol]
    main.o(.text.GPIOC_Handler) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    main.o(.text.GPIOC_Handler) refers to main.o(.bss.xQueue) for xQueue
    main.o(.text.GPIOC_Handler) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    main.o(.ARM.exidx.text.GPIOC_Handler) refers to main.o(.text.GPIOC_Handler) for [Anonymous Symbol]
    main.o(.text.GPIOF_Handler) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.GPIOF_Handler) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    main.o(.text.GPIOF_Handler) refers to main.o(.bss.OnOffS) for OnOffS
    main.o(.text.GPIOF_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.ARM.exidx.text.GPIOF_Handler) refers to main.o(.text.GPIOF_Handler) for [Anonymous Symbol]
    main.o(.text.Obstacle) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    main.o(.text.Obstacle) refers to main.o(.text.delayMs) for delayMs
    main.o(.ARM.exidx.text.Obstacle) refers to main.o(.text.Obstacle) for [Anonymous Symbol]
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.GPIOA_Handler) for GPIOA_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.GPIOC_Handler) for GPIOC_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.GPIOF_Handler) for GPIOF_Handler
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to memseta.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_1.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.delayMs), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.initTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.WindowUp_Driver), (8 bytes).
    Removing main.o(.ARM.exidx.text.WindowDown_Driver), (8 bytes).
    Removing main.o(.ARM.exidx.text.WindowUp_Passenger), (8 bytes).
    Removing main.o(.ARM.exidx.text.WindowDown_Passenger), (8 bytes).
    Removing main.o(.ARM.exidx.text.OnOff), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOA_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOC_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOF_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.Obstacle), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing startup_tm4c123.o(HEAP), (0 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (46 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (18 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (108 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (94 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (480 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (318 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (212 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (54 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (62 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (48 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (68 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (340 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (278 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (110 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (484 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (264 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (70 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (356 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (248 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (554 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (668 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (498 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (110 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (176 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (52 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (44 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (90 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (78 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (44 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (76 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntStatus), (14 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinConfigure), (68 bytes).
    Removing gpio.o(i.GPIOPinTypeADC), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUART), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntMasterEnable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing sysctl.o(.emb_text), (6 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockGet), (340 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing sysctl.o(.constdata), (596 bytes).
    Removing cpu.o(.emb_text), (38 bytes).

329 unused section(s) (total 15564 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/../cmprslib/zerorunl.c           0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    .ARM.Collect$$$$00000000                 0x0000026c   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x0000026c   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000270   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000274   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000274   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000274   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x0000027c   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x0000027c   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x0000027c   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x0000027c   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000280   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000280   Section      252  startup_tm4c123.o(.text)
    .text                                    0x0000037c   Section        0  memcpya.o(.text)
    .text                                    0x000003a0   Section        0  memseta.o(.text)
    .text                                    0x000003c4   Section       36  init.o(.text)
    .text                                    0x000003e8   Section        0  __dczerorl.o(.text)
    [Anonymous Symbol]                       0x00000424   Section        0  main.o(.text.GPIOA_Handler)
    [Anonymous Symbol]                       0x0000058c   Section        0  main.o(.text.GPIOC_Handler)
    [Anonymous Symbol]                       0x000005bc   Section        0  main.o(.text.GPIOF_Handler)
    [Anonymous Symbol]                       0x0000062c   Section        0  main.o(.text.Obstacle)
    [Anonymous Symbol]                       0x00000678   Section        0  main.o(.text.OnOff)
    [Anonymous Symbol]                       0x000006d0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x00000730   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00000740   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000760   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000764   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x000007a0   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000008ac   Section        0  main.o(.text.WindowDown_Driver)
    [Anonymous Symbol]                       0x000009dc   Section        0  main.o(.text.WindowDown_Passenger)
    [Anonymous Symbol]                       0x00000b0c   Section        0  main.o(.text.WindowUp_Driver)
    [Anonymous Symbol]                       0x00000c90   Section        0  main.o(.text.WindowUp_Passenger)
    [Anonymous Symbol]                       0x00000e14   Section        0  main.o(.text.delayMs)
    [Anonymous Symbol]                       0x00000e54   Section        0  main.o(.text.initTask)
    [Anonymous Symbol]                       0x00001014   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x000011a1   Thumb Code   282  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x000011a0   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x000012bd   Thumb Code   334  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x000012bc   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x0000140d   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x0000140c   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x00001479   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001478   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x000014d5   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x000014d4   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00001519   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00001518   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x000015e5   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x000015e4   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x000015fd   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x000015fc   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x00001625   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x00001624   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvIdleTask                              0x00001665   Thumb Code    56  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00001664   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x0000169d   Thumb Code    44  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x0000169c   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x000016c9   Thumb Code    68  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x000016c8   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x0000170d   Thumb Code   278  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x0000170c   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00001825   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00001824   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertTimerInActiveList               0x000018b5   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x000018b4   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x0000193d   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x0000193c   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x00001965   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x00001964   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x00001995   Thumb Code   236  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00001994   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00001a81   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00001a80   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x00001aa9   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x00001aa8   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x00001afd   Thumb Code   326  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x00001afc   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x00001c45   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x00001c44   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x00001ce1   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x00001ce0   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x00001d15   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00001d14   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x00001d51   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00001d50   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x00001d95   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x00001d94   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x00001de9   Thumb Code    76  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00001de8   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00001e35   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00001e34   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00001e55   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001e54   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001f20   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00001fe0   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x0000200c   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x0000206c   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x000020b4   Section        0  tasks.o(.text.uxTaskGetNumberOfTasks)
    [Anonymous Symbol]                       0x000020c0   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x000020f0   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00002100   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x0000216c   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x000021a9   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000021a8   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000021bc   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00002214   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00002260   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00002284   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x000022c8   Section        0  port.o(.text.vPortValidateInterruptPriority)
    [Anonymous Symbol]                       0x0000234c   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x000023b0   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x000023d4   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x000023e4   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00002428   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x000024a4   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00002628   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x000026dc   Section        0  tasks.o(.text.vTaskSuspend)
    [Anonymous Symbol]                       0x00002858   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x00002868   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002868   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00002928   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x00002aa4   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00002acc   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x00002b68   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00002c70   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00002ee4   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x000030a0   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x00003224   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00003400   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x00003610   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x000036e4   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00003784   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x000037bc   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x000037d0   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00003a30   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00003b68   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00003cc4   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x00003e50   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x00004074   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.GPIODirModeSet                         0x000040e0   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOIntClear                           0x00004108   Section        0  gpio.o(i.GPIOIntClear)
    i.GPIOIntDisable                         0x0000410e   Section        0  gpio.o(i.GPIOIntDisable)
    i.GPIOIntEnable                          0x0000411c   Section        0  gpio.o(i.GPIOIntEnable)
    i.GPIOIntRegister                        0x00004128   Section        0  gpio.o(i.GPIOIntRegister)
    i.GPIOIntTypeSet                         0x00004142   Section        0  gpio.o(i.GPIOIntTypeSet)
    i.GPIOPadConfigSet                       0x00004194   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinRead                            0x00004304   Section        0  gpio.o(i.GPIOPinRead)
    i.GPIOPinTypeGPIOInput                   0x0000430a   Section        0  gpio.o(i.GPIOPinTypeGPIOInput)
    i.GPIOPinTypeGPIOOutput                  0x00004326   Section        0  gpio.o(i.GPIOPinTypeGPIOOutput)
    i.GPIOPinWrite                           0x00004342   Section        0  gpio.o(i.GPIOPinWrite)
    i.GPIOUnlockPin                          0x00004348   Section        0  gpio.o(i.GPIOUnlockPin)
    i.IntEnable                              0x00004360   Section        0  interrupt.o(i.IntEnable)
    i.IntPrioritySet                         0x000043c4   Section        0  interrupt.o(i.IntPrioritySet)
    i.IntRegister                            0x000043ec   Section        0  interrupt.o(i.IntRegister)
    i.SysCtlPeripheralEnable                 0x00004420   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReady                  0x00004448   Section        0  sysctl.o(i.SysCtlPeripheralReady)
    _GPIOIntNumberGet                        0x00004475   Thumb Code    62  gpio.o(i._GPIOIntNumberGet)
    i._GPIOIntNumberGet                      0x00004474   Section        0  gpio.o(i._GPIOIntNumberGet)
    i.__scatterload_copy                     0x000044c4   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x000044d2   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x000044d4   Section       14  handlers.o(i.__scatterload_zeroinit)
    g_ppui32GPIOIntMapBlizzard               0x000044e4   Data         192  gpio.o(.constdata)
    .constdata                               0x000044e4   Section      552  gpio.o(.constdata)
    g_ppui32GPIOIntMapSnowflake              0x000045a4   Data         216  gpio.o(.constdata)
    g_pui32GPIOBaseAddrs                     0x0000467c   Data         144  gpio.o(.constdata)
    g_pui32Priority                          0x0000470c   Data          32  interrupt.o(.constdata)
    .constdata                               0x0000470c   Section      268  interrupt.o(.constdata)
    g_pui32Regs                              0x0000472c   Data         156  interrupt.o(.constdata)
    g_pui32EnRegs                            0x000047c8   Data          20  interrupt.o(.constdata)
    g_pui32Dii16Regs                         0x000047dc   Data          20  interrupt.o(.constdata)
    g_pui32PendRegs                          0x000047f0   Data          20  interrupt.o(.constdata)
    g_pui32UnpendRegs                        0x00004804   Data          20  interrupt.o(.constdata)
    .L.str.5                                 0x00004818   Data           6  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004818   Section        0  main.o(.rodata.str1.1)
    .L.str.4                                 0x0000481e   Data          21  main.o(.rodata.str1.1)
    .L.str.3                                 0x00004833   Data          19  main.o(.rodata.str1.1)
    .L.str.2                                 0x00004846   Data          18  main.o(.rodata.str1.1)
    .L.str.1                                 0x00004858   Data          16  main.o(.rodata.str1.1)
    .L.str                                   0x00004868   Data           5  main.o(.rodata.str1.1)
    .L.str                                   0x0000486d   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000486d   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x00004872   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004872   Section        0  timers.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    g_pfnRAMVectors                          0x20000400   Data         620  interrupt.o(vtable)
    vtable                                   0x20000400   Section      620  interrupt.o(vtable)
    prvSampleTimeNow.xLastTime               0x2000068c   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x2000068c   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pvPortMalloc.pucAlignedHeap              0x20000690   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x20000690   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    __tagsym$$used.1                         0x20000694   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000698   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000698   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x2000069c   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x2000069c   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x200006a0   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200006a0   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200006a4   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200006a4   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200006a8   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200006a8   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x2000070c   Data        8192  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x2000070c   Section        0  heap_1.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x2000270c   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x2000270c   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x20002710   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x20002710   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    uxCurrentNumberOfTasks                   0x20002714   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002714   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002718   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002718   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x2000271c   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x2000271c   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002720   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002720   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002724   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002724   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002728   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002728   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x2000273c   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x2000273c   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002750   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002750   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002764   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002764   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x20002778   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002778   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xNextFreeByte                            0x2000277c   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x2000277c   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x20002780   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002780   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002784   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002784   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendedTicks                             0x20002788   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002788   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x2000278c   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x2000278c   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x200027a4   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x200027a4   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x200027a8   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x200027a8   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x200027bc   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x200027bc   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x200027d0   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x200027d0   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x200027d4   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x200027d4   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x200027d8   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x200027d8   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x200027dc   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x200027dc   Section        0  tasks.o(.bss.xYieldPending)
    STACK                                    0x200027e0   Section      512  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x0000026d   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000271   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000275   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000275   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000275   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000275   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x0000027d   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x0000027d   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000281   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000289   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000028b   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x0000028d   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000028f   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000291   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000295   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x0000029d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x000002a1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x000002a3   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x000002a5   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x000002a7   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x000002a9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x000002ab   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x000002ad   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x000002af   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x000002b1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x000002b3   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x000002b5   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x000002b7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x000002b9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x000002bb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x000002bd   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x000002bf   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x000002c1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x000002c3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x000002c5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x000002c7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x000002c9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x000002cb   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000002cd   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000002cf   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000002d1   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000002d3   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000002d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000002d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000002db   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000002dd   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000002df   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000002e1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000002e3   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000002e5   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000002e7   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000002e9   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000002eb   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000002ed   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000002ef   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000002f1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000002f3   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000002f5   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000002f7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000002f9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000002fb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000002fd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000002ff   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x00000301   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x00000303   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000305   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x00000307   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000309   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x0000030b   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x0000030d   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x0000030f   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x00000311   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x00000313   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x0000031f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x00000323   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x00000325   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x0000037d   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x0000037d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x0000037d   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000003a1   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000003a1   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000003a1   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000003af   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000003af   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000003af   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000003b3   Thumb Code    18  memseta.o(.text)
    __scatterload                            0x000003c5   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x000003c5   Thumb Code     0  init.o(.text)
    __decompress                             0x000003e9   Thumb Code     0  __dczerorl.o(.text)
    __decompress0                            0x000003e9   Thumb Code    58  __dczerorl.o(.text)
    GPIOA_Handler                            0x00000425   Thumb Code   360  main.o(.text.GPIOA_Handler)
    GPIOC_Handler                            0x0000058d   Thumb Code    48  main.o(.text.GPIOC_Handler)
    GPIOF_Handler                            0x000005bd   Thumb Code   112  main.o(.text.GPIOF_Handler)
    Obstacle                                 0x0000062d   Thumb Code    74  main.o(.text.Obstacle)
    OnOff                                    0x00000679   Thumb Code    88  main.o(.text.OnOff)
    PendSV_Handler                           0x000006d1   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x00000741   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000765   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x000007a1   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    WindowDown_Driver                        0x000008ad   Thumb Code   302  main.o(.text.WindowDown_Driver)
    WindowDown_Passenger                     0x000009dd   Thumb Code   302  main.o(.text.WindowDown_Passenger)
    WindowUp_Driver                          0x00000b0d   Thumb Code   388  main.o(.text.WindowUp_Driver)
    WindowUp_Passenger                       0x00000c91   Thumb Code   386  main.o(.text.WindowUp_Passenger)
    delayMs                                  0x00000e15   Thumb Code    62  main.o(.text.delayMs)
    initTask                                 0x00000e55   Thumb Code   446  main.o(.text.initTask)
    main                                     0x00001015   Thumb Code   396  main.o(.text.main)
    pvPortMalloc                             0x00001f21   Thumb Code   192  heap_1.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00001fe1   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x0000200d   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x0000206d   Thumb Code    72  list.o(.text.uxListRemove)
    uxTaskGetNumberOfTasks                   0x000020b5   Thumb Code    12  tasks.o(.text.uxTaskGetNumberOfTasks)
    vListInitialise                          0x000020c1   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x000020f1   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00002101   Thumb Code   106  list.o(.text.vListInsert)
    vListInsertEnd                           0x0000216d   Thumb Code    58  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x000021bd   Thumb Code    86  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00002215   Thumb Code    74  port.o(.text.vPortExitCritical)
    vPortFree                                0x00002261   Thumb Code    36  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00002285   Thumb Code    68  port.o(.text.vPortSetupTimerInterrupt)
    vPortValidateInterruptPriority           0x000022c9   Thumb Code   132  port.o(.text.vPortValidateInterruptPriority)
    vQueueWaitForMessageRestricted           0x0000234d   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskInternalSetTimeOutState             0x000023b1   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x000023d5   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x000023e5   Thumb Code    66  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00002429   Thumb Code   124  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x000024a5   Thumb Code   386  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00002629   Thumb Code   178  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspend                             0x000026dd   Thumb Code   378  tasks.o(.text.vTaskSuspend)
    vTaskSuspendAll                          0x00002859   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00002869   Thumb Code   190  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00002929   Thumb Code   380  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x00002aa5   Thumb Code    38  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00002acd   Thumb Code   154  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x00002b69   Thumb Code   264  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00002c71   Thumb Code   628  queue.o(.text.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x00002ee5   Thumb Code   444  queue.o(.text.xQueueGenericSendFromISR)
    xQueueGiveFromISR                        0x000030a1   Thumb Code   386  queue.o(.text.xQueueGiveFromISR)
    xQueueReceive                            0x00003225   Thumb Code   476  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x00003401   Thumb Code   528  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x00003611   Thumb Code   210  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x000036e5   Thumb Code   160  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00003785   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x000037bd   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x000037d1   Thumb Code   608  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00003a31   Thumb Code   312  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00003b69   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00003cc5   Thumb Code   396  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x00003e51   Thumb Code   546  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x00004075   Thumb Code   108  timers.o(.text.xTimerCreateTimerTask)
    GPIODirModeSet                           0x000040e1   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOIntClear                             0x00004109   Thumb Code     6  gpio.o(i.GPIOIntClear)
    GPIOIntDisable                           0x0000410f   Thumb Code    14  gpio.o(i.GPIOIntDisable)
    GPIOIntEnable                            0x0000411d   Thumb Code    12  gpio.o(i.GPIOIntEnable)
    GPIOIntRegister                          0x00004129   Thumb Code    26  gpio.o(i.GPIOIntRegister)
    GPIOIntTypeSet                           0x00004143   Thumb Code    80  gpio.o(i.GPIOIntTypeSet)
    GPIOPadConfigSet                         0x00004195   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinRead                              0x00004305   Thumb Code     6  gpio.o(i.GPIOPinRead)
    GPIOPinTypeGPIOInput                     0x0000430b   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOInput)
    GPIOPinTypeGPIOOutput                    0x00004327   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOOutput)
    GPIOPinWrite                             0x00004343   Thumb Code     6  gpio.o(i.GPIOPinWrite)
    GPIOUnlockPin                            0x00004349   Thumb Code    18  gpio.o(i.GPIOUnlockPin)
    IntEnable                                0x00004361   Thumb Code    92  interrupt.o(i.IntEnable)
    IntPrioritySet                           0x000043c5   Thumb Code    36  interrupt.o(i.IntPrioritySet)
    IntRegister                              0x000043ed   Thumb Code    44  interrupt.o(i.IntRegister)
    SysCtlPeripheralEnable                   0x00004421   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReady                    0x00004449   Thumb Code    40  sysctl.o(i.SysCtlPeripheralReady)
    __scatterload_copy                       0x000044c5   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x000044d3   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x000044d5   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    uxTopUsedPriority                        0x0000487c   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00004880   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000048a0   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    MotorMutex                               0x20000670   Data           4  main.o(.bss.MotorMutex)
    ObstacleS                                0x20000674   Data           4  main.o(.bss.ObstacleS)
    OnOffS                                   0x20000678   Data           4  main.o(.bss.OnOffS)
    WindowDown_driverS                       0x2000067c   Data           4  main.o(.bss.WindowDown_driverS)
    WindowDown_passengerS                    0x20000680   Data           4  main.o(.bss.WindowDown_passengerS)
    WindowUp_driverS                         0x20000684   Data           4  main.o(.bss.WindowUp_driverS)
    WindowUp_passengerS                      0x20000688   Data           4  main.o(.bss.WindowUp_passengerS)
    pxCurrentTCB                             0x20000694   Data           4  tasks.o(.bss.pxCurrentTCB)
    xQueue                                   0x200027a0   Data           4  main.o(.bss.xQueue)
    __initial_sp                             0x200029e0   Data           0  startup_tm4c123.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000281

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00005270, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x00004c18])

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x000048a0, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO           44    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000000   Code   RO         1227  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x0000026c   0x0000026c   0x00000004   Code   RO         1236    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x00000270   0x00000270   0x00000004   Code   RO         1239    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000274   0x00000274   0x00000000   Code   RO         1241    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000274   0x00000274   0x00000000   Code   RO         1243    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000274   0x00000274   0x00000008   Code   RO         1244    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO         1246    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO         1248    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x0000027c   0x0000027c   0x00000004   Code   RO         1237    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000280   0x00000280   0x000000fc   Code   RO           45  * .text               startup_tm4c123.o
    0x0000037c   0x0000037c   0x00000024   Code   RO         1230    .text               mc_w.l(memcpya.o)
    0x000003a0   0x000003a0   0x00000024   Code   RO         1232    .text               mc_w.l(memseta.o)
    0x000003c4   0x000003c4   0x00000024   Code   RO         1250    .text               mc_w.l(init.o)
    0x000003e8   0x000003e8   0x0000003a   Code   RO         1260    .text               mc_w.l(__dczerorl.o)
    0x00000422   0x00000422   0x00000002   PAD
    0x00000424   0x00000424   0x00000168   Code   RO           18    .text.GPIOA_Handler  main.o
    0x0000058c   0x0000058c   0x00000030   Code   RO           20    .text.GPIOC_Handler  main.o
    0x000005bc   0x000005bc   0x00000070   Code   RO           22    .text.GPIOF_Handler  main.o
    0x0000062c   0x0000062c   0x0000004a   Code   RO           24    .text.Obstacle      main.o
    0x00000676   0x00000676   0x00000002   PAD
    0x00000678   0x00000678   0x00000058   Code   RO           16    .text.OnOff         main.o
    0x000006d0   0x000006d0   0x00000064   Code   RO          104    .text.PendSV_Handler  port.o
    0x00000734   0x00000734   0x0000000c   PAD
    0x00000740   0x00000740   0x00000024   Code   RO           88    .text.SVC_Handler   port.o
    0x00000764   0x00000764   0x0000003c   Code   RO          106    .text.SysTick_Handler  port.o
    0x000007a0   0x000007a0   0x0000010c   Code   RO           56    .text.SystemInit    system_tm4c123.o
    0x000008ac   0x000008ac   0x0000012e   Code   RO           10    .text.WindowDown_Driver  main.o
    0x000009da   0x000009da   0x00000002   PAD
    0x000009dc   0x000009dc   0x0000012e   Code   RO           14    .text.WindowDown_Passenger  main.o
    0x00000b0a   0x00000b0a   0x00000002   PAD
    0x00000b0c   0x00000b0c   0x00000184   Code   RO            8    .text.WindowUp_Driver  main.o
    0x00000c90   0x00000c90   0x00000182   Code   RO           12    .text.WindowUp_Passenger  main.o
    0x00000e12   0x00000e12   0x00000002   PAD
    0x00000e14   0x00000e14   0x0000003e   Code   RO            2    .text.delayMs       main.o
    0x00000e52   0x00000e52   0x00000002   PAD
    0x00000e54   0x00000e54   0x000001be   Code   RO            6    .text.initTask      main.o
    0x00001012   0x00001012   0x00000002   PAD
    0x00001014   0x00001014   0x0000018c   Code   RO            4    .text.main          main.o
    0x000011a0   0x000011a0   0x0000011a   Code   RO          231    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x000012ba   0x000012ba   0x00000002   PAD
    0x000012bc   0x000012bc   0x0000014e   Code   RO          219    .text.prvAddNewTaskToReadyList  tasks.o
    0x0000140a   0x0000140a   0x00000002   PAD
    0x0000140c   0x0000140c   0x0000006a   Code   RO          355    .text.prvCheckForValidListAndQueue  timers.o
    0x00001476   0x00001476   0x00000002   PAD
    0x00001478   0x00001478   0x0000005a   Code   RO          321    .text.prvCheckTasksWaitingTermination  tasks.o
    0x000014d2   0x000014d2   0x00000002   PAD
    0x000014d4   0x000014d4   0x00000042   Code   RO          172    .text.prvCopyDataFromQueue  queue.o
    0x00001516   0x00001516   0x00000002   PAD
    0x00001518   0x00001518   0x000000cc   Code   RO          158    .text.prvCopyDataToQueue  queue.o
    0x000015e4   0x000015e4   0x00000018   Code   RO          225    .text.prvDeleteTCB  tasks.o
    0x000015fc   0x000015fc   0x00000026   Code   RO          176    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x00001622   0x00001622   0x00000002   PAD
    0x00001624   0x00001624   0x00000040   Code   RO          385    .text.prvGetNextExpireTime  timers.o
    0x00001664   0x00001664   0x00000038   Code   RO          257    .text.prvIdleTask   tasks.o
    0x0000169c   0x0000169c   0x0000002c   Code   RO          146    .text.prvInitialiseMutex  queue.o
    0x000016c8   0x000016c8   0x00000044   Code   RO          142    .text.prvInitialiseNewQueue  queue.o
    0x0000170c   0x0000170c   0x00000116   Code   RO          217    .text.prvInitialiseNewTask  tasks.o
    0x00001822   0x00001822   0x00000002   PAD
    0x00001824   0x00001824   0x0000008e   Code   RO          319    .text.prvInitialiseTaskLists  tasks.o
    0x000018b2   0x000018b2   0x00000002   PAD
    0x000018b4   0x000018b4   0x00000086   Code   RO          399    .text.prvInsertTimerInActiveList  timers.o
    0x0000193a   0x0000193a   0x00000002   PAD
    0x0000193c   0x0000193c   0x00000028   Code   RO          174    .text.prvIsQueueEmpty  queue.o
    0x00001964   0x00001964   0x0000002e   Code   RO          162    .text.prvIsQueueFull  queue.o
    0x00001992   0x00001992   0x00000002   PAD
    0x00001994   0x00001994   0x000000ec   Code   RO          160    .text.prvNotifyQueueSetContainer  queue.o
    0x00001a80   0x00001a80   0x00000028   Code   RO           96    .text.prvPortStartFirstTask  port.o
    0x00001aa8   0x00001aa8   0x00000054   Code   RO          393    .text.prvProcessExpiredTimer  timers.o
    0x00001afc   0x00001afc   0x00000146   Code   RO          389    .text.prvProcessReceivedCommands  timers.o
    0x00001c42   0x00001c42   0x00000002   PAD
    0x00001c44   0x00001c44   0x0000009a   Code   RO          387    .text.prvProcessTimerOrBlockTask  timers.o
    0x00001cde   0x00001cde   0x00000002   PAD
    0x00001ce0   0x00001ce0   0x00000034   Code   RO          397    .text.prvReloadTimer  timers.o
    0x00001d14   0x00001d14   0x0000003c   Code   RO          223    .text.prvResetNextTaskUnblockTime  tasks.o
    0x00001d50   0x00001d50   0x00000044   Code   RO          391    .text.prvSampleTimeNow  timers.o
    0x00001d94   0x00001d94   0x00000052   Code   RO          395    .text.prvSwitchTimerLists  timers.o
    0x00001de6   0x00001de6   0x00000002   PAD
    0x00001de8   0x00001de8   0x0000004c   Code   RO           86    .text.prvTaskExitError  port.o
    0x00001e34   0x00001e34   0x0000001e   Code   RO          357    .text.prvTimerTask  timers.o
    0x00001e52   0x00001e52   0x00000002   PAD
    0x00001e54   0x00001e54   0x000000cc   Code   RO          164    .text.prvUnlockQueue  queue.o
    0x00001f20   0x00001f20   0x000000c0   Code   RO          120    .text.pvPortMalloc  heap_1.o
    0x00001fe0   0x00001fe0   0x0000002c   Code   RO          303    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x0000200c   0x0000200c   0x0000005e   Code   RO           84    .text.pxPortInitialiseStack  port.o
    0x0000206a   0x0000206a   0x00000002   PAD
    0x0000206c   0x0000206c   0x00000048   Code   RO           75    .text.uxListRemove  list.o
    0x000020b4   0x000020b4   0x0000000c   Code   RO          267    .text.uxTaskGetNumberOfTasks  tasks.o
    0x000020c0   0x000020c0   0x0000002e   Code   RO           67    .text.vListInitialise  list.o
    0x000020ee   0x000020ee   0x00000002   PAD
    0x000020f0   0x000020f0   0x0000000e   Code   RO           69    .text.vListInitialiseItem  list.o
    0x000020fe   0x000020fe   0x00000002   PAD
    0x00002100   0x00002100   0x0000006a   Code   RO           73    .text.vListInsert   list.o
    0x0000216a   0x0000216a   0x00000002   PAD
    0x0000216c   0x0000216c   0x0000003a   Code   RO           71    .text.vListInsertEnd  list.o
    0x000021a6   0x000021a6   0x00000002   PAD
    0x000021a8   0x000021a8   0x00000014   Code   RO           94    .text.vPortEnableVFP  port.o
    0x000021bc   0x000021bc   0x00000056   Code   RO          100    .text.vPortEnterCritical  port.o
    0x00002212   0x00002212   0x00000002   PAD
    0x00002214   0x00002214   0x0000004a   Code   RO          102    .text.vPortExitCritical  port.o
    0x0000225e   0x0000225e   0x00000002   PAD
    0x00002260   0x00002260   0x00000024   Code   RO          122    .text.vPortFree     heap_1.o
    0x00002284   0x00002284   0x00000044   Code   RO           92    .text.vPortSetupTimerInterrupt  port.o
    0x000022c8   0x000022c8   0x00000084   Code   RO          108    .text.vPortValidateInterruptPriority  port.o
    0x0000234c   0x0000234c   0x00000064   Code   RO          196    .text.vQueueWaitForMessageRestricted  queue.o
    0x000023b0   0x000023b0   0x00000024   Code   RO          285    .text.vTaskInternalSetTimeOutState  tasks.o
    0x000023d4   0x000023d4   0x0000000e   Code   RO          289    .text.vTaskMissedYield  tasks.o
    0x000023e2   0x000023e2   0x00000002   PAD
    0x000023e4   0x000023e4   0x00000042   Code   RO          273    .text.vTaskPlaceOnEventList  tasks.o
    0x00002426   0x00002426   0x00000002   PAD
    0x00002428   0x00002428   0x0000007c   Code   RO          277    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x000024a4   0x000024a4   0x00000182   Code   RO          299    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00002626   0x00002626   0x00000002   PAD
    0x00002628   0x00002628   0x000000b2   Code   RO          255    .text.vTaskStartScheduler  tasks.o
    0x000026da   0x000026da   0x00000002   PAD
    0x000026dc   0x000026dc   0x0000017a   Code   RO          245    .text.vTaskSuspend  tasks.o
    0x00002856   0x00002856   0x00000002   PAD
    0x00002858   0x00002858   0x00000010   Code   RO          229    .text.vTaskSuspendAll  tasks.o
    0x00002868   0x00002868   0x000000be   Code   RO          247    .text.vTaskSwitchContext  tasks.o
    0x00002926   0x00002926   0x00000002   PAD
    0x00002928   0x00002928   0x0000017c   Code   RO           90    .text.xPortStartScheduler  port.o
    0x00002aa4   0x00002aa4   0x00000026   Code   RO          144    .text.xQueueCreateMutex  queue.o
    0x00002aca   0x00002aca   0x00000002   PAD
    0x00002acc   0x00002acc   0x0000009a   Code   RO          140    .text.xQueueGenericCreate  queue.o
    0x00002b66   0x00002b66   0x00000002   PAD
    0x00002b68   0x00002b68   0x00000108   Code   RO          138    .text.xQueueGenericReset  queue.o
    0x00002c70   0x00002c70   0x00000274   Code   RO          150    .text.xQueueGenericSend  queue.o
    0x00002ee4   0x00002ee4   0x000001bc   Code   RO          166    .text.xQueueGenericSendFromISR  queue.o
    0x000030a0   0x000030a0   0x00000182   Code   RO          168    .text.xQueueGiveFromISR  queue.o
    0x00003222   0x00003222   0x00000002   PAD
    0x00003224   0x00003224   0x000001dc   Code   RO          170    .text.xQueueReceive  queue.o
    0x00003400   0x00003400   0x00000210   Code   RO          154    .text.xQueueSemaphoreTake  queue.o
    0x00003610   0x00003610   0x000000d2   Code   RO          287    .text.xTaskCheckForTimeOut  tasks.o
    0x000036e2   0x000036e2   0x00000002   PAD
    0x000036e4   0x000036e4   0x000000a0   Code   RO          215    .text.xTaskCreate   tasks.o
    0x00003784   0x00003784   0x00000038   Code   RO          293    .text.xTaskGetSchedulerState  tasks.o
    0x000037bc   0x000037bc   0x00000014   Code   RO          263    .text.xTaskGetTickCount  tasks.o
    0x000037d0   0x000037d0   0x00000260   Code   RO          261    .text.xTaskIncrementTick  tasks.o
    0x00003a30   0x00003a30   0x00000138   Code   RO          297    .text.xTaskPriorityDisinherit  tasks.o
    0x00003b68   0x00003b68   0x0000015c   Code   RO          295    .text.xTaskPriorityInherit  tasks.o
    0x00003cc4   0x00003cc4   0x0000018c   Code   RO          279    .text.xTaskRemoveFromEventList  tasks.o
    0x00003e50   0x00003e50   0x00000222   Code   RO          233    .text.xTaskResumeAll  tasks.o
    0x00004072   0x00004072   0x00000002   PAD
    0x00004074   0x00004074   0x0000006c   Code   RO          353    .text.xTimerCreateTimerTask  timers.o
    0x000040e0   0x000040e0   0x00000028   Code   RO          420    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x00004108   0x00004108   0x00000006   Code   RO          421    i.GPIOIntClear      driverlib.lib(gpio.o)
    0x0000410e   0x0000410e   0x0000000e   Code   RO          422    i.GPIOIntDisable    driverlib.lib(gpio.o)
    0x0000411c   0x0000411c   0x0000000c   Code   RO          423    i.GPIOIntEnable     driverlib.lib(gpio.o)
    0x00004128   0x00004128   0x0000001a   Code   RO          424    i.GPIOIntRegister   driverlib.lib(gpio.o)
    0x00004142   0x00004142   0x00000050   Code   RO          428    i.GPIOIntTypeSet    driverlib.lib(gpio.o)
    0x00004192   0x00004192   0x00000002   PAD
    0x00004194   0x00004194   0x00000170   Code   RO          432    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x00004304   0x00004304   0x00000006   Code   RO          434    i.GPIOPinRead       driverlib.lib(gpio.o)
    0x0000430a   0x0000430a   0x0000001c   Code   RO          443    i.GPIOPinTypeGPIOInput  driverlib.lib(gpio.o)
    0x00004326   0x00004326   0x0000001c   Code   RO          444    i.GPIOPinTypeGPIOOutput  driverlib.lib(gpio.o)
    0x00004342   0x00004342   0x00000006   Code   RO          462    i.GPIOPinWrite      driverlib.lib(gpio.o)
    0x00004348   0x00004348   0x00000018   Code   RO          463    i.GPIOUnlockPin     driverlib.lib(gpio.o)
    0x00004360   0x00004360   0x00000064   Code   RO          754    i.IntEnable         driverlib.lib(interrupt.o)
    0x000043c4   0x000043c4   0x00000028   Code   RO          765    i.IntPrioritySet    driverlib.lib(interrupt.o)
    0x000043ec   0x000043ec   0x00000034   Code   RO          766    i.IntRegister       driverlib.lib(interrupt.o)
    0x00004420   0x00004420   0x00000028   Code   RO          903    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00004448   0x00004448   0x0000002c   Code   RO          907    i.SysCtlPeripheralReady  driverlib.lib(sysctl.o)
    0x00004474   0x00004474   0x00000050   Code   RO          464    i._GPIOIntNumberGet  driverlib.lib(gpio.o)
    0x000044c4   0x000044c4   0x0000000e   Code   RO         1254    i.__scatterload_copy  mc_w.l(handlers.o)
    0x000044d2   0x000044d2   0x00000002   Code   RO         1255    i.__scatterload_null  mc_w.l(handlers.o)
    0x000044d4   0x000044d4   0x0000000e   Code   RO         1256    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x000044e2   0x000044e2   0x00000002   PAD
    0x000044e4   0x000044e4   0x00000228   Data   RO          465    .constdata          driverlib.lib(gpio.o)
    0x0000470c   0x0000470c   0x0000010c   Data   RO          770    .constdata          driverlib.lib(interrupt.o)
    0x00004818   0x00004818   0x00000055   Data   RO           33    .rodata.str1.1      main.o
    0x0000486d   0x0000486d   0x00000005   Data   RO          339    .rodata.str1.1      tasks.o
    0x00004872   0x00004872   0x00000008   Data   RO          402    .rodata.str1.1      timers.o
    0x0000487a   0x0000487a   0x00000002   PAD
    0x0000487c   0x0000487c   0x00000004   Data   RO          324    .rodata.uxTopUsedPriority  tasks.o
    0x00004880   0x00004880   0x00000020   Data   RO         1253    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00004c00, Size: 0x000029e0, Max: 0x00008000, ABSOLUTE, COMPRESSED[0x00000018])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW           58    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   COMPRESSED   0x00000004   Data   RW          112    .data.uxCriticalNesting  port.o
    0x20000008   COMPRESSED   0x000003f8   PAD
    0x20000400   COMPRESSED   0x0000026c   Data   RW          771    vtable              driverlib.lib(interrupt.o)
    0x2000066c   COMPRESSED   0x00000004   PAD
    0x20000670        -       0x00000004   Zero   RW           32    .bss.MotorMutex     main.o
    0x20000674        -       0x00000004   Zero   RW           31    .bss.ObstacleS      main.o
    0x20000678        -       0x00000004   Zero   RW           28    .bss.OnOffS         main.o
    0x2000067c        -       0x00000004   Zero   RW           27    .bss.WindowDown_driverS  main.o
    0x20000680        -       0x00000004   Zero   RW           30    .bss.WindowDown_passengerS  main.o
    0x20000684        -       0x00000004   Zero   RW           26    .bss.WindowUp_driverS  main.o
    0x20000688        -       0x00000004   Zero   RW           29    .bss.WindowUp_passengerS  main.o
    0x2000068c        -       0x00000004   Zero   RW          406    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000690        -       0x00000004   Zero   RW          128    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x20000694        -       0x00000004   Zero   RW          323    .bss.pxCurrentTCB   tasks.o
    0x20000698        -       0x00000004   Zero   RW          404    .bss.pxCurrentTimerList  timers.o
    0x2000069c        -       0x00000004   Zero   RW          334    .bss.pxDelayedTaskList  tasks.o
    0x200006a0        -       0x00000004   Zero   RW          335    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200006a4        -       0x00000004   Zero   RW          405    .bss.pxOverflowTimerList  timers.o
    0x200006a8        -       0x00000064   Zero   RW          325    .bss.pxReadyTasksLists  tasks.o
    0x2000070c        -       0x00002000   Zero   RW          129    .bss.ucHeap         heap_1.o
    0x2000270c        -       0x00000001   Zero   RW          110    .bss.ucMaxSysCallPriority  port.o
    0x2000270d   COMPRESSED   0x00000003   PAD
    0x20002710        -       0x00000004   Zero   RW          111    .bss.ulMaxPRIGROUPValue  port.o
    0x20002714        -       0x00000004   Zero   RW          330    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002718        -       0x00000004   Zero   RW          329    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x2000271c        -       0x00000004   Zero   RW          332    .bss.uxSchedulerSuspended  tasks.o
    0x20002720        -       0x00000004   Zero   RW          327    .bss.uxTaskNumber   tasks.o
    0x20002724        -       0x00000004   Zero   RW          326    .bss.uxTopReadyPriority  tasks.o
    0x20002728        -       0x00000014   Zero   RW          407    .bss.xActiveTimerList1  timers.o
    0x2000273c        -       0x00000014   Zero   RW          408    .bss.xActiveTimerList2  timers.o
    0x20002750        -       0x00000014   Zero   RW          344    .bss.xDelayedTaskList1  tasks.o
    0x20002764        -       0x00000014   Zero   RW          345    .bss.xDelayedTaskList2  tasks.o
    0x20002778        -       0x00000004   Zero   RW          340    .bss.xIdleTaskHandle  tasks.o
    0x2000277c        -       0x00000004   Zero   RW          130    .bss.xNextFreeByte  heap_1.o
    0x20002780        -       0x00000004   Zero   RW          341    .bss.xNextTaskUnblockTime  tasks.o
    0x20002784        -       0x00000004   Zero   RW          343    .bss.xNumOfOverflows  tasks.o
    0x20002788        -       0x00000004   Zero   RW          342    .bss.xPendedTicks   tasks.o
    0x2000278c        -       0x00000014   Zero   RW          338    .bss.xPendingReadyList  tasks.o
    0x200027a0        -       0x00000004   Zero   RW           34    .bss.xQueue         main.o
    0x200027a4        -       0x00000004   Zero   RW          331    .bss.xSchedulerRunning  tasks.o
    0x200027a8        -       0x00000014   Zero   RW          336    .bss.xSuspendedTaskList  tasks.o
    0x200027bc        -       0x00000014   Zero   RW          328    .bss.xTasksWaitingTermination  tasks.o
    0x200027d0        -       0x00000004   Zero   RW          333    .bss.xTickCount     tasks.o
    0x200027d4        -       0x00000004   Zero   RW          401    .bss.xTimerQueue    timers.o
    0x200027d8        -       0x00000004   Zero   RW          403    .bss.xTimerTaskHandle  timers.o
    0x200027dc        -       0x00000004   Zero   RW          337    .bss.xYieldPending  tasks.o
    0x200027e0        -       0x00000200   Zero   RW           42    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       228          0          0          0       8200       1739   heap_1.o
       296          0          0          0          0       2328   list.o
      2964          0         85          0         32       4243   main.o
      1166         16          0          4          5       3970   port.o
      3964          0          0          0          0      16052   queue.o
       252         10        620          0        512       5464   startup_tm4c123.o
       268          0          0          4          0       6744   system_tm4c123.o
      5366          0          9          0        260      22209   tasks.o
      1208         10          8          0         60       8398   timers.o

    ----------------------------------------------------------------------
     15800         48        756       1024       9072      71147   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        88         12          2       1016          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       718         38        552          0          0      12731   gpio.o
       192         20        268        620          0       2679   interrupt.o
        84          8          0          0          0       1021   sysctl.o
        58          0          0          0          0          0   __dczerorl.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o

    ----------------------------------------------------------------------
      1216         82        820        620          4      16675   Library Totals
         6          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       994         66        820        620          0      16431   driverlib.lib
       216         16          0          0          0        244   mc_w.l

    ----------------------------------------------------------------------
      1216         82        820        620          4      16675   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     17016        130       1576       1644       9076      86614   Grand Totals
     17016        130       1576         24       9076      86614   ELF Image Totals (compressed)
     17016        130       1576         24          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                18592 (  18.16kB)
    Total RW  Size (RW Data + ZI Data)             10720 (  10.47kB)
    Total ROM Size (Code + RO Data + RW Data)      18616 (  18.18kB)

==============================================================================

